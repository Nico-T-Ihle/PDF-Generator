import java.awt.*;import java.awt.image.BufferedImage;import java.io.ByteArrayOutputStream;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.math.BigInteger;import java.nio.charset.StandardCharsets;import java.security.cert.Certificate;import java.util.HashMap;import java.util.Map;import com.itextpdf.text.*;import com.itextpdf.text.Font;import com.itextpdf.text.Image;import com.itextpdf.text.List;import com.itextpdf.text.pdf.Barcode;import com.itextpdf.text.pdf.BarcodeQRCode;import com.itextpdf.text.pdf.PdfWriter;import com.itextpdf.text.pdf.draw.DottedLineSeparator;import com.itextpdf.text.pdf.draw.LineSeparator;import com.itextpdf.text.pdf.qrcode.QRCodeWriter;import netscape.javascript.JSObject;import org.json.JSONObject;import javax.imageio.ImageIO;import javax.swing.text.Style;public class PDF{    private static Object JSONObject;    public static void main(String[] args)    {        try {            JSONObject SettingData = new JSONObject();            SettingData.put("url", "https://Test.de");            SettingData.put("user", "TestUser1");            SettingData.put("password", "Test!");            System.out.println(SettingData);            Document document = new Document();            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("your text"));            document.open();            Font f = new Font();            f.setStyle(Font.BOLD);            f.setSize(25);            document.add(new Paragraph("Up2date-Software QR-Code", f));            Chunk Linebreak3 = new Chunk(new LineSeparator());            document.add(Linebreak3);            document.add(new Paragraph("please use this QR-Code for autofill your settings."));            BarcodeQRCode barcodeQRCode = new BarcodeQRCode("https://memorynotfound.com/", 1000, 1000, null);            Image codeQrImage = barcodeQRCode.getImage();            codeQrImage.scaleAbsolute(500, 400);            document.add(codeQrImage);            //document.close();            //String jsonDataString  = SettingData.toString();            //BufferedImage qrImage = generateQRCodeImage(toHex(jsonDataString));            //ByteArrayOutputStream baos = new ByteArrayOutputStream();            //ImageIO.write(qrImage,"png",baos);            //document.add(Image.getInstance(baos.toByteArray()));            Chunk Linebreak1 = new Chunk(new LineSeparator());            document.add(Linebreak1);            document.close();            writer.close();        } catch (DocumentException e) {            e.printStackTrace();        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (Exception e ) {            e.printStackTrace();        }    }   // public static BufferedImage generateQRCodeImage(String barcodeText) throws Exception {    //    QRCodeWriter barcodeWriter = new QRCodeWriter();     //   BitMatrix bitMatrix =     //           barcodeWriter.encode(barcodeText, BarcodeFormat.QR_CODE, 250, 250);      //  return MatrixToImageWriter.toBufferedImage(bitMatrix);    //}    //public static String toHex(String arg) {     //   return String.format("%040x", new BigInteger(1, arg.getBytes(/*YOUR_CHARSET?*/)));   // }}